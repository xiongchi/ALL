# coding=utf-8

import time

import matplotlib
from flask import send_file
import da.photoService.fenshiPlan as plan
import os
import sys
import time
from da.main import main
from config import logger
import ConfigParser

cf = ConfigParser.ConfigParser()

cf.read("data.conf")

time_map = {}


@main.route('/')
def hello_world():
    return 'Hello World!'


@main.route('/fs_all')
def get_all_fs():
    plan.fs_all(8)
    return 'success'


@main.route('/fs_code/<code>')
def get_fs_code(code):
    now_time_str = time.strftime("%Y-%m-%d %H:%M", time.localtime(time.time()))
    if code in time_map.keys() and time.strftime("%Y-%m-%d %H:%M", time.localtime(time_map[code])) == now_time_str:
        return send_file(sys.path[0] + '/da/static/img/' + code + ".png", mimetype='image/png',
                         cache_timeout=0)
    else:
        try:
            statinfo = os.stat(sys.path[0] + "/da/static/img/" + code + ".png")
        except Exception as er:
            logger.error(er)
            return get_code_img(code)
    statinfo_time_str = time.strftime("%Y-%m-%d %H:%M", time.localtime(statinfo.st_mtime))
    if statinfo_time_str == now_time_str:
        return send_file(sys.path[0] + '/da/static/img/' + code + ".png", mimetype='image/png',
                         cache_timeout=0)
        # modify_time = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime(statinfo.st_mtime))
    return get_code_img(code)


# 获取单张分时图
def get_code_img(code):
    index_code = cf.get("index", "code").split(",")
    if (code in index_code):
        logger.info("fs_code_%s指数分时图" % code)
        plan.fs_secucode(code, 1)

    else:
        logger.info("fs_code_%s股票分时图" % code)
        plan.fs_secucode(code, 1)
        time_map[code] = time.time()
    try:
        return send_file(sys.path[0] + '/da/static/img/' + code + ".png", mimetype='image/png',
                         cache_timeout=0)
    except Exception as er:
        logger.error(er)
        return "请输入正确的编号"


@main.route('/test')
def get_test():
    logger.info('测试进程')
    return str(plan.cpuNameTest())

# @main.route('/test2')
# def get_test2():
#     logger.info('测试数据')
#     # plan.test_data()
#     plan.cpuNameTest()
#     print config.get_map_value().keys()
#     # print type(config.get_map_value())
#     r = pickle.dumps(config.get_map_value())
#     # pickle.loads(r)
#     a = {}
#     a = pickle.loads(r)
#     print a['sh600353']
#     a['sh600353'].savefig(sys.path[0] + '/da/static/img/' + 'sh600353' + '.png')
#     print type(a['sh600353'])
#     return 'a'
